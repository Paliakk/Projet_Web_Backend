// <auto-generated />
using Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(BackendContext))]
    [Migration("20240225144040_Initialisation")]
    partial class Initialisation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesCourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsStudentId")
                        .HasColumnType("int");

                    b.HasKey("CoursesCourseId", "StudentsStudentId");

                    b.HasIndex("StudentsStudentId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("Web_Backend.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("AdminUsername")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            AdminUsername = "admin1"
                        },
                        new
                        {
                            AdminId = 2,
                            AdminUsername = "admin2"
                        });
                });

            modelBuilder.Entity("Web_Backend.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseDescription = "Web Development is fun!",
                            CourseName = "Web Development"
                        },
                        new
                        {
                            CourseId = 2,
                            CourseDescription = "Java Programming is fun! Fun! Fun! ",
                            CourseName = "Java Programming"
                        },
                        new
                        {
                            CourseId = 3,
                            CourseDescription = "C# Programming is fun too!",
                            CourseName = "C# Programming"
                        },
                        new
                        {
                            CourseId = 4,
                            CourseDescription = "Learn about data structures.",
                            CourseName = "Data Structures"
                        },
                        new
                        {
                            CourseId = 5,
                            CourseDescription = "Study the fundamentals of algorithms.",
                            CourseName = "Algorithms"
                        },
                        new
                        {
                            CourseId = 6,
                            CourseDescription = "Dive into computer networking principles.",
                            CourseName = "Computer Networks"
                        },
                        new
                        {
                            CourseId = 7,
                            CourseDescription = "Explore how operating systems work.",
                            CourseName = "Operating Systems"
                        },
                        new
                        {
                            CourseId = 8,
                            CourseDescription = "Understand database management systems.",
                            CourseName = "Database Systems"
                        });
                });

            modelBuilder.Entity("Web_Backend.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorId"));

                    b.Property<string>("InstructorUsername")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("InstructorId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            InstructorId = 1,
                            InstructorUsername = "instructor1"
                        },
                        new
                        {
                            InstructorId = 2,
                            InstructorUsername = "instructor2"
                        },
                        new
                        {
                            InstructorId = 3,
                            InstructorUsername = "Dr. Jordan"
                        },
                        new
                        {
                            InstructorId = 4,
                            InstructorUsername = "Prof. Morgan"
                        },
                        new
                        {
                            InstructorId = 5,
                            InstructorUsername = "Dr. Casey"
                        });
                });

            modelBuilder.Entity("Web_Backend.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("StudentUsername")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            StudentUsername = "Igor"
                        },
                        new
                        {
                            StudentId = 2,
                            StudentUsername = "Steven"
                        },
                        new
                        {
                            StudentId = 3,
                            StudentUsername = "Damien"
                        },
                        new
                        {
                            StudentId = 4,
                            StudentUsername = "AlexSmith"
                        },
                        new
                        {
                            StudentId = 5,
                            StudentUsername = "JamieDoe"
                        },
                        new
                        {
                            StudentId = 6,
                            StudentUsername = "ChrisJohnson"
                        },
                        new
                        {
                            StudentId = 7,
                            StudentUsername = "PatTaylor"
                        },
                        new
                        {
                            StudentId = 8,
                            StudentUsername = "SamBrown"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("Web_Backend.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_Backend.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
